"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _LinkedTreeList=_interopRequireDefault(require("collect-your-stuff/dist/collections/linked-tree-list/LinkedTreeList")),_generateNode=_interopRequireDefault(require("../factories/generateNode")),_AttachedNodeIterator=_interopRequireDefault(require("../recipes/AttachedNodeIterator"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class PseudoNodeList extends _LinkedTreeList.default{constructor(){super(...arguments),this.classType=PseudoNodeList}entries(){let e=0;return{[Symbol.iterator]:()=>new _AttachedNodeIterator.default(this.first,(t=>null===t?t:[e++,t.data]))}}keys(){let e=0;return{[Symbol.iterator]:()=>new _AttachedNodeIterator.default(this.first,(t=>e++))}}values(){return{[Symbol.iterator]:()=>new _AttachedNodeIterator.default(this.first,(e=>null===e?e:e.data))}}[Symbol.iterator](){return new _AttachedNodeIterator.default(this.first)}static fromArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,_generateNode.default)(),r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:PseudoNodeList;return _LinkedTreeList.default.fromArray(e,t,r)}}var _default=exports.default=PseudoNodeList;